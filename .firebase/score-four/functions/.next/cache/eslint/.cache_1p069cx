[{"/Users/alan/programming/score-four/src/app/[id]/page.js":"1","/Users/alan/programming/score-four/src/app/api/route.js":"2","/Users/alan/programming/score-four/src/app/layout.js":"3","/Users/alan/programming/score-four/src/app/page.js":"4","/Users/alan/programming/score-four/src/components/Game.js":"5","/Users/alan/programming/score-four/src/lib/game.js":"6","/Users/alan/programming/score-four/src/lib/util.js":"7","/Users/alan/programming/score-four/src/app/api/get-data.js":"8","/Users/alan/programming/score-four/src/app/api/post-data.js":"9","/Users/alan/programming/score-four/src/app/signin/page.js":"10","/Users/alan/programming/score-four/src/lib/constants.js":"11"},{"size":303,"mtime":1698188175795,"results":"12","hashOfConfig":"13"},{"size":1329,"mtime":1697633921815,"results":"14","hashOfConfig":"13"},{"size":1274,"mtime":1697944360546,"results":"15","hashOfConfig":"13"},{"size":1632,"mtime":1697946209387,"results":"16","hashOfConfig":"13"},{"size":6683,"mtime":1698208730305,"results":"17","hashOfConfig":"13"},{"size":13629,"mtime":1696141102458,"results":"18","hashOfConfig":"13"},{"size":377,"mtime":1696799849564,"results":"19","hashOfConfig":"13"},{"size":801,"mtime":1697602992770,"results":"20","hashOfConfig":"13"},{"size":1401,"mtime":1697602157012,"results":"21","hashOfConfig":"13"},{"size":552,"mtime":1697516565362,"results":"22","hashOfConfig":"13"},{"size":115,"mtime":1697517207285,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"81jvxx",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alan/programming/score-four/src/app/[id]/page.js",[],[],"/Users/alan/programming/score-four/src/app/api/route.js",[],[],"/Users/alan/programming/score-four/src/app/layout.js",[],[],"/Users/alan/programming/score-four/src/app/page.js",[],[],"/Users/alan/programming/score-four/src/components/Game.js",["58","59"],[],"'use client'\n\nimport Image from 'next/image'\nimport { useState, useEffect, useRef, useMemo, Fragment, useCallback } from 'react'\nimport { playMove } from '@/app/api/post-data'\nimport { pegToNotation } from '@/lib/util'\nimport { AVAILABLE, IN_PROGRESS, COMPLETED } from '@/lib/constants'\nimport { listenToGame } from '@/app/api/get-data'\nimport { auth } from '../../firebase'\n\nimport { checkIfGameWon } from '@/lib/game'\n\nfunction Peg({ beads, onPegClick, className }) {\n\treturn (\n\t\t<div\n\t\t\tclassName={`bg-gray-400 rounded w-8 h-28 flex flex-col-reverse items-center justify-start overflow-hidden ${className}`}\n\t\t\tonClick={onPegClick}\n\t\t>\n\t\t\t{beads\n\t\t\t\t.filter((bead) => bead !== 0)\n\t\t\t\t.map((bead, i) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`w-full h-6 border-t border-gray-400 ${bead === 1 ? 'bg-white' : 'bg-black'}`}\n\t\t\t\t\t\tkey={`bead-${i}`}\n\t\t\t\t\t></div>\n\t\t\t\t))}\n\t\t</div>\n\t)\n}\nfunction Grid({ board, onPegClick, winningPegs, myTurn, status }) {\n\tconst pegs = []\n\tfor (let i = 0; i < 16; i++) {\n\t\tpegs.push(board.slice(i * 4, i * 4 + 4))\n\t}\n\n\treturn (\n\t\t<div className=\"grid grid-cols-4 grid-rows-4 gap-10\">\n\t\t\t{pegs.map((beads, i) => (\n\t\t\t\t<Peg\n\t\t\t\t\tbeads={beads}\n\t\t\t\t\tkey={`peg-${i}`}\n\t\t\t\t\tonPegClick={() => onPegClick(i)}\n\t\t\t\t\tclassName={`${winningPegs.length > 0 && !winningPegs.includes(i) && 'opacity-30'} ${\n\t\t\t\t\t\tmyTurn && !beads.find((x) => x === 0) && status === IN_PROGRESS && 'cursor-pointer'\n\t\t\t\t\t}`}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default function Game({ game, id }) {\n\tconst [board, setBoard] = useState(JSON.parse(game.moves.slice(-1)[0].position))\n\tconst [moves, setMoves] = useState(game.moves)\n\tconst [status, setStatus] = useState(game.status)\n\tconst [winner, setWinner] = useState(game.winner)\n\tconst [winningPegs, setWinningPegs] = useState(game.winningPegs)\n\tconst mounted = useRef(false)\n\tconst isBlack = localStorage.getItem('user') === game.blackPlayer.uid\n\tconst [myTurn, setMyTurn] = useState(isBlack ? game.moves.length % 2 === 1 : game.moves.length % 2 === 0)\n\n\tconst currentMoveIndex = moves.findIndex((x) => x.position === JSON.stringify(board))\n\tconst isCurrentMove = currentMoveIndex === moves.length - 1\n\n\tconst moveContainerRef = useRef(null)\n\n\tuseEffect(() => {\n\t\tif (moveContainerRef.current) {\n\t\t\tconst scrollAmount =\n\t\t\t\tmoveContainerRef.current.scrollHeight * (parseInt((currentMoveIndex - 1) / 2) / (moves.length / 2)) -\n\t\t\t\tmoveContainerRef.current.getBoundingClientRect().height / 2 +\n\t\t\t\t30\n\t\t\tmoveContainerRef.current.scrollTop = scrollAmount\n\t\t}\n\t}, [moveContainerRef, currentMoveIndex, moves])\n\n\tconst newWinner = checkIfGameWon(board)\n\tif (!winner && newWinner) {\n\t\tsetWinningPegs(newWinner.winningPegs)\n\t\tsetWinner(newWinner.winner)\n\t}\n\n\tconst moveClick = useCallback(\n\t\t(move) => {\n\t\t\tsetBoard(JSON.parse(move.position))\n\t\t\tsetWinner('')\n\t\t\tsetWinningPegs([])\n\t\t},\n\t\t[moveContainerRef, currentMoveIndex, moves]\n\t)\n\n\tconst handleKeyStroke = useCallback(\n\t\t(event) => {\n\t\t\tswitch (event.key) {\n\t\t\t\tcase 'ArrowLeft':\n\t\t\t\t\tif (currentMoveIndex > 1) {\n\t\t\t\t\t\tmoveClick(moves[currentMoveIndex - 1])\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\tcase 'ArrowRight':\n\t\t\t\t\tif (currentMoveIndex < moves.length - 1) {\n\t\t\t\t\t\tmoveClick(moves[currentMoveIndex + 1])\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\tcase 'ArrowUp':\n\t\t\t\t\tif (currentMoveIndex > 1) {\n\t\t\t\t\t\tmoveClick(moves[1])\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\tcase 'ArrowDown':\n\t\t\t\t\tif (currentMoveIndex < moves.length - 1) {\n\t\t\t\t\t\tmoveClick(moves[moves.length - 1])\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t},\n\t\t[currentMoveIndex, moves, moveClick]\n\t)\n\n\tuseEffect(() => {\n\t\tif (!mounted.current) {\n\t\t\tlistenToGame(id, (gameData) => {\n\t\t\t\tconst newBoard = JSON.parse(gameData.moves.slice(-1)[0].position)\n\t\t\t\tsetBoard(newBoard)\n\t\t\t\tsetMoves(gameData.moves)\n\t\t\t\tsetStatus(gameData.status)\n\t\t\t\tsetMyTurn(isBlack ? gameData.moves.length % 2 === 1 : gameData.moves.length % 2 === 0)\n\t\t\t})\n\n\t\t\tmounted.current = true\n\t\t}\n\t}, [mounted])\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('keydown', handleKeyStroke)\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('keydown', handleKeyStroke)\n\t\t}\n\t}, [handleKeyStroke])\n\n\tconst handlePegClick = (i) => {\n\t\tconst newBoard = [...board]\n\t\tconst peg = newBoard.slice(i * 4, i * 4 + 4)\n\t\tconst emptySlot = peg.findIndex((x) => x === 0)\n\n\t\tif (!myTurn || emptySlot === -1 || status !== IN_PROGRESS || !isCurrentMove) {\n\t\t\treturn\n\t\t}\n\n\t\tsetMyTurn(false)\n\n\t\tnewBoard[i * 4 + emptySlot] = isBlack ? -1 : 1\n\t\tsetBoard(newBoard)\n\t\tconst winner = checkIfGameWon(newBoard)\n\n\t\tif (winner) {\n\t\t\tsetWinningPegs(winner.winningPegs)\n\t\t\tsetWinner(winner.winner)\n\t\t}\n\n\t\tplayMove(id, pegToNotation(i), newBoard, winner?.winner, winner?.winningPegs)\n\t}\n\n\tconst handleRestartClick = () => {\n\t\tsetBoard(Array(64).fill(0))\n\t\tsetWinningPegs([])\n\t\tsetWinner('')\n\n\t\tconst res = fetch('/api', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({ message: { type: 'new-game' }, sender: 'player' }),\n\t\t})\n\t}\n\n\treturn (\n\t\t<main className=\"flex min-h-screen items-center text-white justify-center p-16\">\n\t\t\t<div\n\t\t\t\tclassName={`bg-slate-500 p-20 rounded-md relative ${\n\t\t\t\t\twinner === 'W' ? 'text-white' : winner === 'B' ? 'text-black' : ''\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t<div>\n\t\t\t\t\t<Grid board={board} onPegClick={handlePegClick} winningPegs={winningPegs} myTurn={myTurn} status={status} />\n\t\t\t\t</div>\n\t\t\t\t{/* {winner && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"text-xl absolute top-1/2 p-1 border-2 rounded hover:opacity-50 border-white text-white\"\n\t\t\t\t\t\tstyle={{ right: '-130px', transform: 'translateY(-50%)' }}\n\t\t\t\t\t\tonClick={handleRestartClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tRematch\n\t\t\t\t\t</button>\n\t\t\t\t)} */}\n\t\t\t</div>\n\t\t\t<div className=\"bg-slate-800 w-64 h-48 ml-8 flex flex-col rounded overflow-hidden\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={`text-xl w-full text-center h-8 flex align-items-center justify-center ${\n\t\t\t\t\t\t((myTurn && !isBlack) || (!myTurn && isBlack)) && 'text-white'\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t{winner\n\t\t\t\t\t\t? winner === 'W'\n\t\t\t\t\t\t\t? 'White Wins'\n\t\t\t\t\t\t\t: winner === 'B'\n\t\t\t\t\t\t\t? 'Black Wins'\n\t\t\t\t\t\t\t: 'Draw'\n\t\t\t\t\t\t: status !== COMPLETED\n\t\t\t\t\t\t? status === AVAILABLE\n\t\t\t\t\t\t\t? 'Waiting for Opponent'\n\t\t\t\t\t\t\t: myTurn\n\t\t\t\t\t\t\t? 'Your Turn'\n\t\t\t\t\t\t\t: \"Opponent's Turn\"\n\t\t\t\t\t\t: 'Game Completed'}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tref={moveContainerRef}\n\t\t\t\t\tclassName=\"grid grid-cols-[30px_1fr_1fr] grow-1 bg-slate-800 m-h-0 overflow-y-auto overflow-x-hidden no-scrollbar\"\n\t\t\t\t>\n\t\t\t\t\t{moves.slice(1).map((move, i) => (\n\t\t\t\t\t\t<Fragment key={`move-${i}`}>\n\t\t\t\t\t\t\t{i % 2 === 0 && <div className=\"text-center bg-slate-500\">{i / 2 + 1}</div>}\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={`cursor-pointer pl-4 ${currentMoveIndex === i + 1 ? 'bg-slate-600' : 'hover:bg-slate-700'}`}\n\t\t\t\t\t\t\t\tonClick={() => moveClick(move)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{move.lastMove}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</main>\n\t)\n}\n","/Users/alan/programming/score-four/src/lib/game.js",[],[],"/Users/alan/programming/score-four/src/lib/util.js",[],[],"/Users/alan/programming/score-four/src/app/api/get-data.js",[],[],"/Users/alan/programming/score-four/src/app/api/post-data.js",[],[],"/Users/alan/programming/score-four/src/app/signin/page.js",[],[],"/Users/alan/programming/score-four/src/lib/constants.js",[],[],{"ruleId":"60","severity":1,"message":"61","line":89,"column":3,"nodeType":"62","endLine":89,"endColumn":46,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"64","line":132,"column":5,"nodeType":"62","endLine":132,"endColumn":14,"suggestions":"65"},"react-hooks/exhaustive-deps","React Hook useCallback has unnecessary dependencies: 'currentMoveIndex', 'moveContainerRef', and 'moves'. Either exclude them or remove the dependency array.","ArrayExpression",["66"],"React Hook useEffect has missing dependencies: 'id' and 'isBlack'. Either include them or remove the dependency array.",["67"],{"desc":"68","fix":"69"},{"desc":"70","fix":"71"},"Update the dependencies array to be: []",{"range":"72","text":"73"},"Update the dependencies array to be: [id, isBlack, mounted]",{"range":"74","text":"75"},[2817,2860],"[]",[3839,3848],"[id, isBlack, mounted]"]